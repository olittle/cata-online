hadoop.job.ugi.cmd=haliu,hadoop
notify.emails=haliu@linkedin.com 

is.local=false
force.output.overwrite=true
debug.level=INFO

jobs.num.index.shards=1
jobs.id.range.based.partitioner.id.ranges=0,100000000

jobs_postFeast.dir=/user/haliu/JYMBII-batch/TMP/jobs_postFeast
jobs_index.tmp.output.dir=/user/haliu/JYMBII-batch/TMP/jobs_index

index.ram.buffer.size.mb=400
index.max.buffered.docs=500000

# PATHS
input.dir=/data/derived/liar/grandfathering
grandfathering.dir=/jobs/sage/grandfathering
tmp.output.dir=/user/haliu/JYMBII-batch/TMP

# PATHS for MEMBERS
members_postFeast.dir=${input.dir}/members_postFeast/#LATEST
mapred.task.timeout=6000000

# PATHS for JOBS 
#jobs_postFeast.dir=${input.dir}/jobs_postFeast/#LATEST
#jobs_index.tmp.output.dir=${tmp.output.dir}/jobs_index
#jobs_index.tmp.output.dir.multi.sharded=${tmp.output.dir}/jobs_index_multi_sharded
#jobs_index.output.dir=${grandfathering.dir}/jobs_index
#

indexing.contact=haliu@linkedin.com


azkaban.should.proxy=true
user.to.proxy=haliu
ugi=haliu,hadoop
usertoproxy=haliu
hadoop_queue=marathon
jvm.args=-Dmapred.job.queue.name=${hadoop_queue} -Dmapred.child.java.opts=-Xmx1024m -Djava.io.tmpdir=/grid/a/mapred/tmp
consolidation.job.reducers=50

store.key.schema={ 'sourceId':'int32', 'algorithmId':'int32', 'intent':'string' }
store.value.schema={ 'hits':[{'score':'float32', 'id':'int32'}], \
	'algorithmId':'int32', 'lastMod':'int64', 'computeTime':'int64', \
	'returnStatus':'int32', 'sourceId':'int32', 'intent':'string',}

# Files here are read in as distributed cache when necessary.
remote.library.path=/user/haliu/lib
 
# Locally where the jars are located
local.library.path=lib

# Classpaths
local.classpath=./*,./lib/*,${hadoop.home}/*,${hadoop.home}/lib/*
hadoop.home=/export/apps/hadoop/latest

pig.home=/export/apps/pig/littlepiggy-0.10-li0

# CROWN
hadoop-conf.mapred.child.java.opts=-Xmx3G -server -XX:+UseCompressedOops -XX:+UseCompressedStrings
crown.input.dir.path=/user/haliu/JYMBII-batch/TMP/member-postfeast
jobs.index.path=/user/haliu/JYMBII-batch/TMP/jobs_index
crown.output.dir.path=/user/haliu/JYMBII-batch/TMP/member_job_score
crown.tmp.dir.path=/user/haliu/JYMBII-batch/TMP/member_job_score_temp
model.dir.path=/user/haliu/JYMBII-batch/models
all.annotated.topk.limit=currentTitleSimTopK:5,currentTitleSimTopKPlus:20,currentTitleSimTopKMiddle:10,simCompanyByCoocSqrtFilterIndustry:20,indSimManualTop3:3
all.feast.annotate.resources=currentTitleV2:currentTitleSimTopKMiddle:/jobs/liar/similarx/title/#LATEST,currentTitleV2:currentTitleSimTopKPlus:/jobs/liar/similarx/title/#LATEST,currentTitleV2:currentTitleSimTopK:/jobs/liar/similarx/title/#LATEST,geo_region:regionSimTopK:/jobs/liar/region/RegionSimTopK,currentCompany:simCompanyByCoocSqrtFilterIndustry:/jobs/liar/simCompanies/simCompanyByCoocSqrtFilterIndustry,profileIndustry:indSimManualTop3:/jobs/liar/similarx/tmp/industry/industrySim
interests.data.path=/data/derived/i2/interest/#LATEST
members.postfest.key.schema='int32'						 
members.postfest.value.schema=\
{ \
  'id':'int32',\
  'txn':'int64',\
  'type':'string',\
  'deleted':'boolean',\
  'active':'boolean',\
  'fields':[{'name':'string',\
            'queryable':'boolean',\
            'indexable':'boolean',\
            'termVector':[{'id':'string', 'value':'float32'}] \
            }],\
  'profile_targeting_data':'string',\
  'member_std_data_avro':'string',\
  'filterList': ['int32']\
}


# Job Index 

pig.common.header=\
set  mapred.compress.map.output           true\n\
set  mapred.map.output.compression.codec  com.hadoop.compression.lzo.LzopCodec\n\
set  pig.tmpfilecompression               true\n\
set  pig.tmpfilecompression.codec         lzo\n\
set  mapred.output.compress               true\n\
set  mapred.output.compression.codec      org.apache.hadoop.io.compress.DefaultCodec;\n\
set  mapred.output.compression.type       BLOCK;\n\n\
%declare kernel      `uname -s`\n\
%declare now         `date "+%s"`\n\
%declare tzoffset    `bash -c 'if [[ "$kernel" == "Linux" ]]; then echo "-28800";  else echo "0"; fi'`\n\
%declare tzero       `echo $(($now - 60 * 60 * 24 + $tzoffset))`\n\
%declare tone        `echo $(($now + $tzoffset))`\n\
%declare YESTERDAY   `bash -c 'if [[ "$kernel" == "Linux" ]]; then date -d "@$tzero" "+%Y/%m/%d"; else date -r $tzero "+%Y/%m/%d"; fi'`\n\
%declare CURRENT     `bash -c 'if [[ "$kernel" == "Linux" ]]; then date -d "@$tone"  "+%Y-%m-%d-%H-%M-%S"; else date -r $tone  "+%Y-%m-%d-%H-%M-%S"; fi'`\n\
%default date_prev   `echo $YESTERDAY`\n\
%default date_curr   `echo $CURRENT`
